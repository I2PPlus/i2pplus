<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="all" name="i2psnark">

  <target name="all" depends="clean, build"/>

  <target name="build" depends="builddep, jar, war"/>

  <!-- Run from top level build.xml to get dependencies built -->
  <target name="builddep"/>

  <condition property="depend.available">
    <typefound name="depend"/>
  </condition>

  <target name="depend" if="depend.available">
    <depend
      cache="../../../build"
      srcdir="./src"
      destdir="./build/obj">
      <!-- Depend on classes instead of jars where available -->
      <classpath>
        <pathelement location="../../../core/java/build/obj"/>
        <pathelement location="../../../core/java/build/gnu-getopt.jar"/>
        <pathelement location="../../ministreaming/java/build/obj"/>
        <pathelement location="../../jetty/jettylib/javax.servlet.jar"/>
        <!-- jsp-api.jar only present for debian builds -->
        <pathelement location="../../jetty/jettylib/jsp-api.jar"/>
      </classpath>
    </depend>
    <echo message="I2PSnark dependecies added"/>
  </target>

  <!-- Only used if not set by a higher build.xml -->
  <property name="javac.compilerargs" value=""/>
  <property name="javac.version" value="1.8"/>
  <property name="javac.release" value="8"/>
  <property name="require.gettext" value="true"/>
  <property name="manifest.classpath.name" value="Class-Path"/>

  <condition property="no.bundle">
    <isfalse value="${require.gettext}"/>
  </condition>

  <target name="compile" depends="depend">
    <mkdir dir="./build"/>
    <mkdir dir="./build/obj"/>
    <javac
      srcdir="./src"
      debug="true" deprecation="on" source="${javac.version}" target="${javac.version}"
      release="${javac.release}"
      destdir="./build/obj"
      encoding="UTF-8"
      includeAntRuntime="false">
      <compilerarg line="${javac.compilerargs}"/>
      <classpath>
        <pathelement location="../../../core/java/build/i2p.jar"/>
        <!-- gnu-getopt.jar only present for debian builds -->
        <pathelement location="../../../core/java/build/gnu-getopt.jar"/>
        <pathelement location="../../ministreaming/java/build/mstreaming.jar"/>
        <pathelement location="../../jetty/jettylib/javax.servlet.jar"/>
        <!-- jsp-api.jar only present for debian builds -->
        <pathelement location="../../jetty/jettylib/jsp-api.jar"/>
        <!-- Following jars only for standalone builds -->
        <pathelement location="../../jetty/jettylib/jetty-i2p.jar"/>
        <pathelement location="../../systray/java/build/systray.jar"/>
        <pathelement location="../../jetty/jettylib/org.mortbay.jetty.jar"/>
        <pathelement location="../../jetty/jettylib/jetty-util.jar"/>
      </classpath>
    </javac>
    <echo message="I2PSnark compilation completed"/>
  </target>

  <target name="listChangedFiles" depends="jarUpToDate" if="shouldListChanges">
    <exec executable="mtn" outputproperty="workspace.changes" errorproperty="mtn.error2" failifexecutionfails="false">
      <arg value="list"/>
      <arg value="changed"/>
      <arg value=".."/>
    </exec>
    <!-- \n in an attribute value generates an invalid manifest -->
    <exec executable="tr" inputstring="${workspace.changes}" outputproperty="workspace.changes.tr" errorproperty="mtn.error2" failifexecutionfails="false">
      <arg value="-s"/>
      <arg value="[:space:]"/>
      <arg value=","/>
    </exec>
  </target>

  <target name="jar" depends="builddep, compile, jarUpToDate, listChangedFiles" unless="jar.uptodate">
    <!-- Set if unset -->
    <property name="workspace.changes.tr" value=""/>
    <jar destfile="./build/i2psnark.jar" basedir="./build/obj" includes="**/*.class" excludes="**/web/* **/messages_*.class, **/standalone/*">
      <manifest>
        <attribute name="Main-Class" value="org.klomp.snark.CommandLine"/>
        <attribute name="${manifest.classpath.name}" value="i2p.jar mstreaming.jar streaming.jar"/>
        <attribute name="Implementation-Version" value="${full.version}"/>
        <attribute name="Built-By" value="${build.built-by}"/>
        <attribute name="Build-Date" value="${build.timestamp}"/>
        <attribute name="Base-Revision" value="${workspace.version}"/>
        <attribute name="Workspace-Changes" value="${workspace.changes.tr}"/>
        <attribute name="X-Compile-Source-JDK" value="${javac.version}"/>
        <attribute name="X-Compile-Target-JDK" value="${javac.version}"/>
      </manifest>
    </jar>
  </target>

  <target name="jarUpToDate">
    <uptodate property="jar.uptodate" targetfile="build/i2psnark.jar">
      <srcfiles dir="build/obj" includes="**/*.class" excludes="**/web/* **/messages_*.class"/>
    </uptodate>
    <condition property="shouldListChanges">
      <and>
        <not>
          <isset property="jar.uptodate"/>
        </not>
        <not>
          <isset property="war.uptodate"/>
        </not>
        <isset property="mtn.available"/>
      </and>
    </condition>
  </target>

  <!-- Ideally we would include only include the servlet, everything else is in the jar.
       However, the wrapper.config classpath in existing installs does not include i2psnark.jar.
       So we must continue to duplicate everything in the war.
       <classes dir="./build/obj" includes="**/I2PSnarkServlet*.class"/>
     -->
  <target name="war" depends="jar, bundle, warUpToDate, listChangedFiles" unless="war.uptodate">
    <!-- Set if unset -->
    <property name="workspace.changes.tr" value=""/>
    <parallel>
      <copy todir="build/res/.res">
        <fileset dir="../res/"/>
      </copy>
      <copy file="../../routerconsole/jsp/js/onVisible.js" todir="build/res/.res/js"/>
      <!-- mime.properties must be in with the classes -->
      <copy file="../mime.properties" todir="build/obj/org/klomp/snark/web"/>
    </parallel>
    <war destfile="../i2psnark.war" webxml="../web.xml">
      <!-- Include only the web stuff, as of 0.7.12 the router will add i2psnark.jar to the classpath for the war -->
      <classes dir="./build/obj" includes="**/web/*"/>
      <fileset dir="build/res/"/>
      <manifest>
        <attribute name="Implementation-Version" value="${full.version}"/>
        <attribute name="Built-By" value="${build.built-by}"/>
        <attribute name="Build-Date" value="${build.timestamp}"/>
        <attribute name="Base-Revision" value="${workspace.version}"/>
        <attribute name="Workspace-Changes" value="${workspace.changes.tr}"/>
        <attribute name="X-Compile-Source-JDK" value="${javac.version}"/>
        <attribute name="X-Compile-Target-JDK" value="${javac.version}"/>
      </manifest>
    </war>
  </target>

  <target name="warUpToDate">
    <uptodate property="war.uptodate" targetfile="../i2psnark.war">
      <srcfiles dir="." includes="build/obj/org/klomp/snark/web/*.class ../res/**/* ../web.xml"/>
    </uptodate>
  </target>

  <target name="bundle" depends="compile" unless="no.bundle">
    <mkdir dir="build/messages-src"/>
    <!-- Update the messages_*.po files.
         We need to supply the bat file for windows, and then change the fail property to true -->
    <exec executable="sh" osfamily="unix" failifexecutionfails="true" failonerror="${require.gettext}">
      <env key="JAVA_HOME" value="${java.home}"/>
      <arg value="./bundle-messages.sh"/>
    </exec>
    <exec executable="sh" osfamily="mac" failifexecutionfails="true" failonerror="${require.gettext}">
      <arg value="./bundle-messages.sh"/>
    </exec>
    <!-- multi-lang is optional -->
    <exec executable="sh" osfamily="windows" failifexecutionfails="false">
      <arg value="./bundle-messages.sh"/>
    </exec>
    <javac source="${javac.version}" target="${javac.version}"
      release="${javac.release}"
      includeAntRuntime="false"
      encoding="UTF-8"
      srcdir="build/messages-src" destdir="build/obj">
      <compilerarg line="${javac.compilerargs}"/>
    </javac>
    <echo message="I2PSnark translations added"/>
  </target>

  <target name="poupdate" depends="builddep, compile">
    <!-- Update the messages_*.po files.  -->
    <!-- Set if unset -->
    <property name="lg2" value=""/>
    <exec executable="sh" osfamily="unix" failifexecutionfails="true" failonerror="true">
      <env key="LG2" value="${lg2}"/>
      <arg value="./bundle-messages.sh"/>
      <arg value="-p"/>
    </exec>
    <exec executable="sh" osfamily="mac" failifexecutionfails="true" failonerror="true">
      <env key="LG2" value="${lg2}"/>
      <arg value="./bundle-messages.sh"/>
      <arg value="-p"/>
    </exec>
    <exec executable="sh" osfamily="windows" failifexecutionfails="true" failonerror="true">
      <env key="LG2" value="${lg2}"/>
      <arg value="./bundle-messages.sh"/>
      <arg value="-p"/>
    </exec>
    <echo message="I2PSnark .po translation files updated"/>
  </target>

  <target name="standalone" depends="standalone_prep">
    <exec executable="zip" failifexecutionfails="true" failonerror="true">
      <arg value="-r"/>
      <arg value="-9"/>
      <arg value="-q"/>
      <arg value="i2psnark-standalone.zip"/>
      <arg value="i2psnark"/>
    </exec>
  </target>

  <!-- use ant's resident zip -->
  <!--
  <target name="standalone" depends="standalone_prep">
    <delete file="../../../dist/i2psnark-standalone.zip"/>
    <zip destfile="i2psnark-standalone.zip" basedir="i2psnark" level="9" duplicate="preserve" encoding="UTF-8">
      <zipfileset dir="i2psnark" includes="**/*"/>
    </zip>
  </target>
  -->

  <target name="standalone7zip" depends="standalone_prep">
    <exec executable="7z" failifexecutionfails="true" failonerror="true">
      <arg value="a"/>
      <arg value="-t7z"/>
      <arg value="-mx=9"/> <!-- Compression -->
      <arg value="-md=4m"/> <!-- Dictionary size -->
      <arg value="-mmt2"/> <!-- Use 2 threads -->
      <arg value="-ssw"/> <!-- Compress shared files -->
      <arg value="-bt"/> <!-- Show execution stats -->
      <arg value="i2psnark-standalone.7z"/>
      <arg value="i2psnark"/>
    </exec>
  </target>

  <!-- Make a fat jar for standalone -->
  <target name="standalone_jar" depends="war">
    <!-- Set if unset -->
    <property name="workspace.changes.tr" value=""/>
    <jar destfile="build/i2psnark-standalone.jar">
      <fileset dir="build/obj" includes="**/standalone/*.class"/>
      <zipfileset src="build/i2psnark.jar"/>
      <zipfileset src="../../../core/java/build/i2p.jar"/>
      <!-- Without this we get a warning about 'no JSP support' but that's it
        <zipfileset src="../../jetty/jettylib/jasper-runtime.jar" />
       -->
      <zipfileset src="../../jetty/jettylib/javax.servlet.jar"/>
      <zipfileset src="../../jetty/jettylib/jetty-continuation.jar"/>
      <zipfileset src="../../jetty/jettylib/jetty-deploy.jar"/>
      <zipfileset src="../../jetty/jettylib/jetty-http.jar"/>
      <zipfileset src="../../jetty/jettylib/jetty-i2p.jar"/>
      <zipfileset src="../../jetty/jettylib/jetty-io.jar"/>
      <zipfileset src="../../jetty/jettylib/jetty-security.jar"/>
      <zipfileset src="../../jetty/jettylib/jetty-servlet.jar"/>
      <zipfileset src="../../jetty/jettylib/jetty-util.jar"/>
      <zipfileset src="../../jetty/jettylib/jetty-webapp.jar"/>
      <zipfileset src="../../jetty/jettylib/jetty-xml.jar"/>
      <zipfileset src="../../jetty/jettylib/org.mortbay.jetty.jar"/>
      <zipfileset src="../../ministreaming/java/build/mstreaming.jar"/>
      <zipfileset src="../../streaming/java/build/streaming.jar"/>
      <zipfileset src="../../systray/java/build/systray.jar"/>
      <zipfileset src="../../../build/jbigi.jar"/>
      <manifest>
        <attribute name="Main-Class" value="org.klomp.snark.standalone.RunStandalone"/>
        <attribute name="Implementation-Version" value="${full.version}"/>
        <attribute name="Built-By" value="${build.built-by}"/>
        <attribute name="Build-Date" value="${build.timestamp}"/>
        <attribute name="Base-Revision" value="${workspace.version}"/>
        <attribute name="Workspace-Changes" value="${workspace.changes.tr}"/>
        <!-- Suppress JNI warning in JRE 24+, and eventual restriction (https://openjdk.org/jeps/472) -->
        <attribute name="Enable-Native-Access" value="ALL-UNNAMED"/>
        <!-- this is so Jetty will report its version correctly -->
        <section name="org/eclipse/jetty/server/">
          <attribute name="Implementation-Vendor" value="Eclipse.org - Jetty"/>
          <attribute name="Implementation-Version" value="${jetty.ver}"/>
        </section>
      </manifest>
    </jar>
    <echo message="I2PSnark standalone fat .jar created"/>
  </target>

  <!-- Add css, image, and js files for standalone snark to the war -->
  <target name="standalone_war" depends="war">
    <parallel>
      <mkdir dir="build/standalone-resources/.res/themes/snark"/>
      <copy quiet="true" todir="build/standalone-resources/.res/themes/snark">
        <fileset dir="../../../installer/resources/themes/snark/"/>
      </copy>
      <mkdir dir="build/standalone-resources/.res/themes/snark/fonts"/>
      <copy quiet="true" todir="build/standalone-resources/.res/themes/snark/fonts">
        <fileset dir="../../../installer/resources/themes/fonts/"/>
      </copy>
      <!-- Rather than pulling in all the console theme images, let's just specify the ones we need -->
      <copy quiet="true" file="../../../installer/resources/themes/console/images/newtab.svg"
            todir="build/standalone-resources/.res/icons"/>
      <copy quiet="true" file="../../../installer/resources/themes/console/dark/images/camotile2.png"
            todir="build/standalone-resources/.res/themes/snark/dark/images"/>
      <copy quiet="true" todir="build/standalone-resources/.res/themes/fonts">
        <fileset dir="../../../installer/resources/themes/fonts/" includes="**/*"/>
      </copy>
      <mkdir dir="build/standalone-resources/.res/js"/>
      <copy file="../../routerconsole/jsp/js/onVisible.js" todir="build/standalone-resources/.res/js"/>
      <copy file="../../i2psnark/res/js/refreshTorrents.js" todir="build/standalone-resources/.res/js"/>
    </parallel>
    <parallel>
      <replace dir="build/standalone-resources/.res/themes/snark" summary="true"
               token="url(/themes/console/classic/images/"
               value="url(/i2psnark/.res/themes/snark/classic/images/">
        <include name="**/*.css"/>
      </replace>
      <replace dir="build/standalone-resources/.res/themes/snark" summary="true"
               token="url(/themes/console/dark/images/"
               value="url(/i2psnark/.res/themes/snark/dark/images/">
        <include name="**/*.css"/>
      </replace>
      <replace dir="build/standalone-resources/.res/themes/fonts" summary="true" token="url(/themes/fonts/" value="url(/i2psnark/.res/themes/fonts/">
        <include name="**/*.css"/>
      </replace>
      <replace dir="build/standalone-resources/.res/js" summary="true" token="/themes/snark/" value="/i2psnark/.res/themes/snark/">
        <include name="**/refreshTorrents.js"/>
      </replace>
    </parallel>
    <zip destfile="../i2psnark.war" update="true" duplicate="preserve">
      <fileset dir="build/standalone-resources"/>
    </zip>
    <echo message="I2PSnark standalone .war file created"/>
  </target>

  <target name="standalone_prep" depends="standalone_jar, standalone_war">
    <delete dir="./i2psnark"/>
    <mkdir dir="./i2psnark"/>
    <parallel>
      <mkdir dir="./i2psnark/logs"/>
      <mkdir dir="./i2psnark/webapps"/>
      <mkdir dir="./i2psnark/docroot"/>
      <mkdir dir="./i2psnark/contexts"/>
      <parallel>
        <copy file="../launch-i2psnark" todir="./i2psnark/" quiet="true"/>
        <copy file="../launch-i2psnark.bat" todir="./i2psnark/" quiet="true"/>
        <copy file="../standalone-context.xml" tofile="./i2psnark/contexts/context.xml" quiet="true"/>
        <copy file="../standalone-index.html" tofile="./i2psnark/docroot/index.html" quiet="true"/>
        <copy file="../i2psnark.war" tofile="./i2psnark/webapps/i2psnark.war" quiet="true"/>
        <copy file="../jetty-i2psnark.xml" tofile="./i2psnark/jetty-i2psnark.xml" quiet="true"/>
        <copy file="../i2psnark-appctx.config" tofile="./i2psnark/i2psnark-appctx.config" quiet="true"/>
        <copy file="./build/i2psnark-standalone.jar" tofile="./i2psnark/i2psnark.jar" quiet="true"/>
        <copy file="../readme-standalone.txt" tofile="./i2psnark/readme.txt" quiet="true"/>
        <copy file="../../../installer/resources/hosts.txt" tofile="./i2psnark/hosts.txt" quiet="true"/>
      </parallel>
    </parallel>
    <chmod type="file" file="./i2psnark/launch-i2psnark" perm="+x"/>
  </target>

  <target name="standalone_nozip" depends="standalone_jar, standalone_war">
    <delete dir="./i2psnark" quiet="true"/>
    <parallel>
      <mkdir dir="./i2psnark"/>
      <sequential>
        <mkdir dir="./i2psnark/contexts"/>
        <mkdir dir="./i2psnark/docroot"/>
        <mkdir dir="./i2psnark/webapps"/>
        <mkdir dir="./i2psnark/logs"/>
      </sequential>
      <parallel>
        <copy file="../launch-i2psnark" todir="./i2psnark/" quiet="true"/>
        <copy file="../launch-i2psnark.bat" todir="./i2psnark/" quiet="true"/>
        <copy file="../standalone-context.xml" tofile="./i2psnark/contexts/context.xml" quiet="true"/>
        <copy file="../standalone-index.html" tofile="./i2psnark/docroot/index.html" quiet="true"/>
        <copy file="../i2psnark.war" tofile="./i2psnark/webapps/i2psnark.war" quiet="true"/>
        <copy file="../jetty-i2psnark.xml" tofile="./i2psnark/jetty-i2psnark.xml" quiet="true"/>
        <copy file="../i2psnark-appctx.config" tofile="./i2psnark/i2psnark-appctx.config" quiet="true"/>
        <copy file="./build/i2psnark-standalone.jar" tofile="./i2psnark/i2psnark.jar" quiet="true"/>
        <copy file="../readme-standalone.txt" tofile="./i2psnark/readme.txt" quiet="true"/>
        <copy file="../../../installer/resources/hosts.txt" tofile="./i2psnark/hosts.txt" quiet="true"/>
      </parallel>
    </parallel>
    <echo message="I2PSnark standalone folder moved to ./dist/i2psnark_standalone"/>
  </target>

  <target name="clean">
    <parallel>
      <delete dir="./build"/>
      <delete file="../i2psnark.war"/>
      <delete file="./i2psnark-standalone.zip"/>
      <delete dir="./i2psnark"/>
    </parallel>
  </target>

  <target name="cleandep" depends="clean"/>

  <target name="distclean" depends="clean"/>
</project>